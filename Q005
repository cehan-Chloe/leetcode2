c class Solution {
    public String longestPalindrome(String s) {
        if (s == null || s.length() <= 1){
            return s;
        }
        int max = 0;
        int start = 0;
        for (int i = 1; i < s.length(); i ++){
            // len is odd
            int low = i - 1;
            int high = i + 1;
            while(low >= 0 && high < s.length() && s.charAt(low) == s.charAt(high)){
                low --;
                high ++;
            }
            // important, the length is high - low - 1 not high - low + 1 && start = low + 1
            if (high - low - 1 > max){
                max = high - low - 1;
                start = low + 1;
            }
            
            // len is even
            low = i - 1;
            high = i;
            while(low >= 0 && high < s.length() && s.charAt(low) == s.charAt(high)){
                low --;
                high ++;
            }
            if (high - low - 1 > max){
                max = high - low - 1;
                start = low + 1;
            }
        }
        return s.substring(start, start + max);
    }
}
