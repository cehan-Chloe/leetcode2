public class Solution {
    public int divide(int dividend, int divisor) {
        if (divisor == 0 || dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        if (dividend == 0) {
            return 0;
        }
        int sign = (dividend > 0) ^ (divisor > 0) ? -1 : 1;
        long ldividend = Math.abs((long) dividend);
	    long ldivisor = Math.abs((long) divisor);
        long res = ldivide(ldividend, ldivisor);
        if (res > Integer.MAX_VALUE) {
            return (sign == 1) ? Integer.MAX_VALUE : Integer.MIN_VALUE;
        } else {
            return (int) (sign * res);
        }
    }
    
    public long ldivide(long dividend, long divisor) {
        if (dividend < divisor) {
            return 0;
        }
        long res = 1;
        long sum = divisor;
        while (dividend >= (sum + sum)) {
            res += res;
            sum += sum;
        }
        return res + ldivide(dividend - sum, divisor);
    }
}
