public class Solution {
    public int singleNonDuplicate(int[] nums) {
        // if (nums == null || nums.length == 0){
        //     return -1;
        // }
        // if (nums.length == 1){
        //     return nums[0];
        // }
        // int i = 0;
        // while (i < nums.length - 1){
        //     if (nums[i] != nums[i + 1]){
        //         return nums[i];
        //     }else{
        //         i += 2;
        //     }
        // }
        // if (nums[nums.length - 1] != nums[nums.length - 2]){
        //     return nums[nums.length - 1];
        // }
        // return -1;
        
        // top solution: binary search
        int start = 0;
        int end = nums.length - 1;
        
        while (start < end){
            int middle = (start + end) / 2;
            if (middle % 2 == 1){
                middle --;
            }
            if (nums[middle] == nums[middle + 1]){
                start = middle + 2;
            }else{
                end = middle;
            }
        }
        return nums[start];
    }
}
