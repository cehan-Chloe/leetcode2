public class Solution {
    public boolean exist(char[][] board, String word) {
        boolean[][] visited = new boolean[board.length][board[0].length];
        for (int i = 0; i < board.length; i ++) {
            for (int j = 0; j < board[0].length; j ++) {
                if (board[i][j] == word.charAt(0)) {
                    if (helper(board, word, i, j, 0, visited)) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
    
    public boolean helper(char[][] board, String word, int i, int j, int pos, boolean[][] visited) {
        if (pos == word.length()) {
            return true;
        }
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || visited[i][j] || board[i][j] != word.charAt(pos)) {
            return false;
        }
        visited[i][j] = true;
        if (helper(board, word, i + 1, j, pos + 1, visited) || helper(board, word, i, j + 1, pos + 1, visited) || helper(board, word, i - 1, j, pos + 1, visited) || helper(board, word, i, j - 1, pos + 1, visited)) {
            return true;
        }
        visited[i][j] = false;
        return false;
    }
}
