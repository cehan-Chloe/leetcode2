public class Solution {
    public String fractionToDecimal(int numerator, int denominator) {
        // negative integer, possible overflow, repeating part
        if (numerator == 0){
            return "0";
        }
        // 1. negative or positive number
        StringBuilder sb = new StringBuilder();
        if (numerator > 0 && denominator < 0 || numerator < 0 && denominator > 0) {
            sb.append("-");
        }
        long den = Math.abs((long)denominator);
        long num = Math.abs((long)numerator);
        
        // 2. integral part
        sb.append(num / den);
        if (num % den == 0){
            return sb.toString();
        }
        
        //3. fractional part
        sb.append(".");
        num %= den;
        Map<Long, Integer> map = new HashMap<>();
        map.put(num, sb.length());
        while (num != 0) {
            num *= 10;
            sb.append(num / den);
            num %= den;
            if (map.containsKey(num)) {
                int index = map.get(num);
                sb.insert(index, "(");
                sb.append(")");
                break;
            }
            else {
                map.put(num, sb.length());
            }
        }
        return sb.toString();
    }
}
