public class Solution {
    public boolean isValidSudoku(char[][] board) {
        // 1. check rows & columns
        for (int i = 0; i < 9; i ++){
            Set<Character> row = new HashSet<>();
            Set<Character> col = new HashSet<>();
            for (int j = 0; j < 9; j ++){
                if (board[i][j] != '.' && !row.add(board[i][j])){
                    return false;
                }
                if (board[j][i] != '.' && !col.add(board[j][i])){
                    return false;
                }
            }
        }
        // 2.check 3 * 3 grid
        for (int m = 0; m < 9; m ++){
            Set<Character> cube = new HashSet<>();
            for (int p = m / 3 * 3; p < m / 3 * 3 + 3; p ++){
                for (int q = m % 3 * 3; q < m % 3 * 3 + 3; q ++){
                    if (board[p][q] != '.' && !cube.add(board[p][q])){
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
