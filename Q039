public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        helper(candidates, target, 0, list, res);
        return res;
    }
    
    public void helper(int[] candidates, int target, int pos, List<Integer> list, List<List<Integer>> res){
        if (target == 0){
            List<Integer> tmp = new ArrayList(list);
            res.add(tmp);
            return;
        }
        
        for (int i = pos; i < candidates.length; i ++){
            if (target - candidates[i] < 0){
                continue;
            }
            list.add(candidates[i]);
            helper(candidates, target - candidates[i], i, list, res);
            list.remove(list.size() - 1);
        }
    }
}
