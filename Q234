/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseLinkedList(ListNode cur){
        ListNode prev = null;
        ListNode next = new ListNode(0);
        while (cur != null){
            next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }

    public boolean isPalindrome(ListNode head) {
        if (head == null){
            return true;
        }
        // find middle node
        ListNode slow = head;
        ListNode fast = head.next;
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode middle = slow.next;
        middle = reverseLinkedList(middle);
        while (middle != null && head != null){
            if (head.val != middle.val){
                return false;
            }
            head = head.next;
            middle = middle.next;
        }
        return true;
    }
}
