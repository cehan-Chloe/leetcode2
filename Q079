public class Solution {
    public boolean exist(char[][] board, String word) {
        int[][] visited = new int[board.length][board[0].length];
        for (int i = 0; i < board.length; i ++){
            for (int j = 0; j < board[0].length; j ++){
                if (word.charAt(0) == board[i][j]){
                    if (helper(board, word, 0, i, j, visited)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    
    public boolean helper(char[][] board, String word, int pos, int i, int j, int[][] visited){
        if (pos == word.length()){
            return true;
        }
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || visited[i][j] == 1 || word.charAt(pos) != board[i][j]){
            return false;
        }
        visited[i][j] = 1;
        if (helper(board, word, pos + 1, i + 1, j, visited) || helper(board, word, pos + 1, i, j + 1, visited) || helper(board, word, pos + 1, i - 1, j, visited) || helper(board, word, pos + 1, i, j - 1, visited)){
            return true;
        }
        visited[i][j] = 0;
        return false;
    }
}
