public class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res = new ArrayList<>();
        helper(k, n, 1, new ArrayList<>(), res);
        return res;
    }
    
    private void helper(int k, int n, int pos, List<Integer> cur, List<List<Integer>> res){
        if (n == 0 && k == 0){
            List<Integer> tmp = new ArrayList<>(cur);
            res.add(tmp);
            return;
        }
        for (int i = pos; i < 10; i ++){
            if (n - pos < 0){
                continue;
            }
            cur.add(i);
            helper(k - 1, n - i, i + 1, cur, res);
            cur.remove(cur.size() - 1);
        }
    }
}
