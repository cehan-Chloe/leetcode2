/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
//     public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
//         if (headA == null || headB == null){
//             return null;
//         }
//         int lenA = 0;
//         int lenB = 0;
//         ListNode a = headA;
//         ListNode b = headB;
//         while (a != null){
//             a = a.next;
//             lenA ++;
//         }
//         while (b != null){
//             b = b.next;
//             lenB ++;
//         }
        
//         while (lenA > lenB) {
//             headA = headA.next;
//             lenA--;
//         }
//         while (lenA < lenB) {
//             headB = headB.next;
//             lenB--;
//         }
        
//         while (headA != headB){
//             headA = headA.next;
//             headB = headB.next;
//         }
//         return headA;
//     }
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null){
            return null;
        }
        ListNode a = headA;
        ListNode b = headB;
        while(a != b){
            a = a == null ? headB: a.next;
            b = b == null ? headA: b.next;
        }
        return a;
    }
}
